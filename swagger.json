{
   "swagger": "2.0",
   "info": {
     "version": "1.0.0",
     "title": "Project: EPICMAIL",
     "description": "EPICMAIL API Documentation",
     "license": {
       "name": "MIT",
       "url": "https://opensource.org/licenses/MIT"
     },
     "contact": {
       "Author": "Gilles Kagarama"
     }
   },
   "host": "epicmailbox.herokuapp.com",
   "basePath": "/",
  "schemes": [
   "http",
   "https"
   ],
   "paths": {
      "/api/v1/users": {
      "get": {
         "tags": [
            "Users"
         ], 
         "summary": "Get a list of all users",
         "produces": [
           "application/json"
         ],       
         "responses": {
            "201": {
              "description": "Get list of users"
            },
            "400": {
              "description": "Invalid information supplied"
            },
            "default": {
              "description": "Sorry, error occured"
            }
          }
         }
      },
      "/api/v1/auth/signup": {
      "post": {
         "tags": [
            "Users"
         ], 
         "summary": "Sign up new user",
         "description": "",
         "produces": [
           "application/json"
         ],  
         "consumes": [
           "application/json"
         ],
         "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Register new user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/signup"
            }
           }          
         ],     
         "responses": {
            "201": {
              "description": "Return a token"
            },
            "400": {
              "description": "Invalid information supplied"
            },
            "default": {
              "description": "Sorry, error occured"
            }
          }
         }
      },
      "/api/v1/auth/login": {
      "post": {
         "tags": [
            "Users"
         ], 
         "summary": "Login a user",
         "description": "",
         "produces": [
           "application/json"
         ],  
         "consumes": [
           "application/json"
         ],
         "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Login a user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/login"
            }
           }          
         ],     
         "responses": {
            "201": {
              "description": "Return a token"
            },
            "400": {
              "description": "Invalid Username or password"
            },
            "default": {
              "description": "Sorry, error occured"
            }
          }
         }
      },
      "/api/v1/contacts": {
      "get": {
         "tags": [
            "Contacts"
         ], 
         "summary": "Get all contacts",
         "produces": [
           "application/json"
         ],       
         "responses": {
            "201": {
              "description": "Get list of contacts"
            },
            "400": {
              "description": "Invalid information supplied"
            },
            "default": {
              "description": "Sorry, error occured"
            }
          }
         }
      },
      "/api/v1/messages": {
      "get": {
         "tags": [
            "Messages"
         ], 
         "summary": "Get all received messages",
         "produces": [
           "application/json"
         ],       
         "responses": {
            "201": {
              "description": "Fetch email reveived"
            },
            "400": {
              "description": "No email found"
            },
            "default": {
              "description": "Sorry, error occured"
            }
          }
         },
      "post": {
        "tags": [
            "Messages"
        ], 
        "summary": "Send email",
        "description": "",
        "produces": [
          "application/json"
        ],  
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Send email",
            "required": true,
            "schema": {
              "$ref": "#/definitions/composeEmail"
            }
          }          
        ],     
        "responses": {
            "201": {
              "description": "Email sent"
            },
            "400": {
              "description": "Invalid information supplied"
            },
            "default": {
              "description": "Sorry, error occured"
            }
          }
        }
      },
      "/api/v1/messages/unread": {
      "get": {
         "tags": [
            "Messages"
         ], 
         "summary": "Get all unread emails",
         "description": "This endpoints fetch all unread emails. It looks for every email that has 'sent' as status",
         "produces": [
           "application/json"
         ],       
         "responses": {
            "201": {
              "description": "Fetch unread emails"
            },
            "400": {
              "description": "No email found"
            },
            "default": {
              "description": "Sorry, error occured"
            }
          }
         }
      },
      "/api/v1/messages/sent": {
      "get": {
         "tags": [
            "Messages"
         ], 
         "summary": "Get all sent emails",
         "description": "This endpoints fetch all unread emails. It looks for every email that has not 'draft' as status",
         "produces": [
           "application/json"
         ],       
         "responses": {
            "201": {
              "description": "Fetch sent emails"
            },
            "400": {
              "description": "No email found"
            },
            "default": {
              "description": "Sorry, error occured"
            }
          }
         }
      },   
      "/api/v1/messages/{id}": {
        "delete": {
           "tags": [
              "Messages"
           ], 
           "summary": "Delete a specific email",
           "description": "",
           "produces": [
             "application/json"
           ],  
           "consumes": [
             "application/json"
           ],
           "parameters": [
            {
              "in": "path",
              "name": "id",
              "description": "",
              "required": true,
              "schema": {
                "$ref": "#/definitions/deteleEmail"
              }
             }          
           ],     
           "responses": {
              "201": {
                "description": "Email has been deleted successfully"
              },
              "400": {
                "description": "The email you are trying to delete doesn't exist"
              },
              "default": {
                "description": "Sorry, error occured"
              }
            }
           },
        "get": {
           "tags": [
              "Messages"
           ], 
           "summary": "View a specific email",
           "description": "",
           "produces": [
             "application/json"
           ],  
           "parameters": [
            {
              "in": "path",
              "name": "id",
              "description": "",
              "required": true,
              "schema": {
                "$ref": "#/definitions/detailEmail"
              }
             }          
           ],     
           "responses": {
              "201": {
                "description": "Message have be retrieved successfully"
              },
              "409": {
                "description": "The email you are trying to view doesn't exist"
              },
              "400": {
                "description": "Error occured while processing your request"
              },
              "default": {
                "description": "Sorry, error occured"
              }
            }
           }
      },
      "/api/v1/groups": {
        "get": {
           "tags": [
              "Groups"
           ], 
           "summary": "Get all groups",
           "produces": [
             "application/json"
           ],       
           "responses": {
              "201": {
                "description": "List of groups"
              },
              "409": {
                "description": "Group already exists, try another one"
              },
              "default": {
                "description": "Sorry, error occured"
              }
            }
           },
        "post": {
          "tags": [
              "Groups"
          ], 
          "summary": "Create a new group",
          "description": "",
          "produces": [
            "application/json"
          ],  
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "",
              "required": true,
              "schema": {
                "$ref": "#/definitions/groupInfo"
              }
            }          
          ],     
          "responses": {
              "201": {
                "description": "Group has been created"
              },
              "400": {
                "description": "Invalid information supplied"
              },
              "default": {
                "description": "Sorry, error occured"
              }
            }
          }
        }
   },
   
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "definitions": {
    "signup": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "login": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "deteleEmail": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        }
      }
    },
    "detailEmail": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        }
      }
    },
    "composeEmail": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "parentMessageId": {
          "type": "integer"
        },
        "status": {
          "type": "string",          
          "default": "sent"
        },
        "senderId": {
          "type": "integer",
          "default": 1
        },
        "receiverId": {
          "type": "integer",
          "default": 1
        },
        "phone": {
          "type": "integer",        
          "default": 25078800112211
        }
      }
    },
    "groupInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    }
  }
}